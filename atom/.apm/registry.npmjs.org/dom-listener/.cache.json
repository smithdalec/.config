{"_id":"dom-listener","_rev":"10-543c47ae71bfd900841aa52a4f0e47c6","name":"dom-listener","description":"A listener for delegated DOM events.","dist-tags":{"latest":"0.1.2"},"versions":{"0.1.0":{"name":"dom-listener","version":"0.1.0","description":"A listener for delegated DOM events.","main":"./lib/dom-listener","scripts":{"prepublish":"grunt clean lint coffee","test":"grunt test"},"repository":{"type":"git","url":"https://github.com/atom/dom-listener.git"},"bugs":{"url":"https://github.com/atom/dom-listener/issues"},"licenses":[{"type":"MIT","url":"http://github.com/atom/dom-listener/raw/master/LICENSE.md"}],"dependencies":{"binary-search":"^1.2.0","clear-cut":"^0.3.0","event-kit":"^1.0.3"},"devDependencies":{"coffee-script":"^1.7.0","jasmine-focused":"^1.0.4","grunt-contrib-coffee":"^0.9.0","grunt-cli":"^0.1.8","grunt":"^0.4.1","grunt-shell":"^0.2.2","grunt-coffeelint":"^0.0.6","rimraf":"^2.2.2","coffee-cache":"^0.2.0","temp":"^0.6.0"},"gitHead":"27d5c63af6690178bea25137124b64aebaa5cf81","homepage":"https://github.com/atom/dom-listener","_id":"dom-listener@0.1.0","_shasum":"082e792ed591b8a0617531ee7a15824318a1a05d","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"nathansobo","email":"nathan@github.com"},"maintainers":[{"name":"nathansobo","email":"nathan@github.com"}],"dist":{"shasum":"082e792ed591b8a0617531ee7a15824318a1a05d","tarball":"https://registry.npmjs.org/dom-listener/-/dom-listener-0.1.0.tgz"},"directories":{}},"0.1.1":{"name":"dom-listener","version":"0.1.1","description":"A listener for delegated DOM events.","main":"./lib/dom-listener","scripts":{"prepublish":"grunt clean lint coffee","test":"grunt test"},"repository":{"type":"git","url":"git+https://github.com/atom/dom-listener.git"},"bugs":{"url":"https://github.com/atom/dom-listener/issues"},"licenses":[{"type":"MIT","url":"http://github.com/atom/dom-listener/raw/master/LICENSE.md"}],"dependencies":{"binary-search":"^1.2.0","clear-cut":"^0.3.0","event-kit":"^1.0.3"},"devDependencies":{"coffee-script":"^1.7.0","jasmine-focused":"^1.0.4","grunt-contrib-coffee":"^0.9.0","grunt-cli":"^0.1.8","grunt":"^0.4.1","grunt-shell":"^0.2.2","grunt-coffeelint":"^0.0.6","rimraf":"^2.2.2","coffee-cache":"^0.2.0","temp":"^0.6.0"},"gitHead":"1097285c55375e5b247fe1a7d2a90df8c0ba5a9b","homepage":"https://github.com/atom/dom-listener#readme","_id":"dom-listener@0.1.1","_shasum":"01babcd8e4f21f7546765620a032fc4a72409034","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"nathansobo","email":"nathan@github.com"},"dist":{"shasum":"01babcd8e4f21f7546765620a032fc4a72409034","tarball":"https://registry.npmjs.org/dom-listener/-/dom-listener-0.1.1.tgz"},"maintainers":[{"name":"nathansobo","email":"nathan@github.com"},{"name":"benogle","email":"ogle.ben@gmail.com"},{"name":"kevinsawicki","email":"kevinsawicki@gmail.com"},{"name":"maxbrunsfeld","email":"maxbrunsfeld@gmail.com"},{"name":"jlord","email":"to.jlord@gmail.com"},{"name":"thedaniel","email":"danielwh@gmail.com"}],"directories":{}},"0.1.2":{"name":"dom-listener","version":"0.1.2","description":"A listener for delegated DOM events.","main":"./lib/dom-listener","scripts":{"prepublish":"grunt clean lint coffee","test":"grunt test"},"repository":{"type":"git","url":"git+https://github.com/atom/dom-listener.git"},"bugs":{"url":"https://github.com/atom/dom-listener/issues"},"licenses":[{"type":"MIT","url":"http://github.com/atom/dom-listener/raw/master/LICENSE.md"}],"dependencies":{"binary-search":"^1.2.0","clear-cut":"^0.3.0","event-kit":"^1.0.3"},"devDependencies":{"coffee-script":"^1.7.0","jasmine-focused":"^1.0.4","grunt-contrib-coffee":"^0.9.0","grunt-cli":"^0.1.8","grunt":"^0.4.1","grunt-shell":"^0.2.2","grunt-coffeelint":"^0.0.6","rimraf":"^2.2.2","coffee-cache":"^0.2.0","temp":"^0.6.0"},"gitHead":"e96c955a49b7fd3e649cdaf81104eca497ae60b8","homepage":"https://github.com/atom/dom-listener#readme","_id":"dom-listener@0.1.2","_shasum":"0d2883a505080eca18697aa1beffbd7281e17f20","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"nathansobo","email":"nathan@github.com"},"dist":{"shasum":"0d2883a505080eca18697aa1beffbd7281e17f20","tarball":"https://registry.npmjs.org/dom-listener/-/dom-listener-0.1.2.tgz"},"maintainers":[{"name":"nathansobo","email":"nathan@github.com"},{"name":"benogle","email":"ogle.ben@gmail.com"},{"name":"kevinsawicki","email":"kevinsawicki@gmail.com"},{"name":"maxbrunsfeld","email":"maxbrunsfeld@gmail.com"},{"name":"jlord","email":"to.jlord@gmail.com"},{"name":"thedaniel","email":"danielwh@gmail.com"}],"directories":{}}},"readme":"# dom-listener\n\nThis library simplifies the event delegation pattern for DOM events. When you\nbuild a `DOMListener` with a DOM node, you can associate event handles with any\nof its descendant nodes via CSS selectors.\n\nSay you have the following DOM structure.\n\n```html\n<div class=\"parent\">\n  <div class=\"child\">\n    <div class=\"grandchild\"></div>\n    <div class=\"grandchild\"></div>\n  </div>\n</div>\n```\n\nNow you can associate a `click` event with all `.grandchild` nodes as follows:\n\n```coffee\nDOMListener = require 'dom-listener'\n\nlistener = new DOMListener(document.querySelector('.parent'))\nlistener.add '.grandchild', 'click', (event) -> # handle event...\n```\n\n## Selector-Based Handlers\n\nTo create a selector-based handler, call `DOMListener::add` with a selector,\nand event name, and a callback. Handlers with selectors matching a given element\nwill be invoked in order of selector specificity, just like CSS. In the event\nof a specificity tie, more recently added handlers will be invoked first.\n\n```coffee\nlistener.add '.child.foo', 'click', (event) -> # handler 1\nlistener.add '.child', 'click', (event) -> # handler 2\nlistener.add '.child', 'click', (event) -> # handler 3\n```\n\nIn the example above, all handlers match an event on `.child.foo`, but handler 1\nis the most specific, so it will be invoked first. Handlers 2 and 3 are tied in\nspecificity, so handler 3 is invoked first since it is more recent.\n\n## Inline Handlers\n\nTo create event handlers for specific DOM nodes, pass the node rather than a\nselector as the first argument to `DOMListener::add`.\n\n```coffee\nchildNode = document.querySelector('.child')\nlistener.add childNode, 'click', (event) -> # handle inline event...\n```\n\nThis is a bit different than adding the event handler directly via the native\n`.addEventListener` method, because only inline handlers registered via\n`DOMListener::add` will correctly interleave with selector-based handlers.\nInterleaving selector-based handlers with native event listeners isn't possible\nwithout monkey-patching DOM APIs because you can't ask an element what event handlers are registered.\n\n## Disposing of Handlers\n\nIf you want to remove an event handler, call `.dispose()` on the `Disposable`\nreturned from `DOMListener::add`:\n\n```coffee\ndisposable = listener.add 'child', 'click', (event) -> # handle event\ndisposable.dispose() # remove event handler\n```\n\n## Destroying the Listener\n\nIf you want to remove *all* event handlers associated with the listener and\nremove its native event listeners, call `DOMListener::destroy()`.\n\n```coffee\nlistener.destroy() # All handlers are removed\n```\n\nYou can add new event handlers and call `.destroy()` again at a later point.\n","maintainers":[{"name":"atom","email":"nathan@github.com"},{"name":"benogle","email":"ogle.ben@gmail.com"},{"name":"jlord","email":"to.jlord@gmail.com"},{"name":"kevinsawicki","email":"kevinsawicki@gmail.com"},{"name":"maxbrunsfeld","email":"maxbrunsfeld@gmail.com"},{"name":"nathansobo","email":"nathan@github.com"},{"name":"thedaniel","email":"danielwh@gmail.com"}],"time":{"modified":"2016-04-11T16:59:31.374Z","created":"2015-03-05T01:40:39.236Z","0.1.0":"2015-03-05T01:40:39.236Z","0.1.1":"2015-09-22T22:44:02.689Z","0.1.2":"2015-09-29T17:46:18.424Z"},"homepage":"https://github.com/atom/dom-listener#readme","repository":{"type":"git","url":"git+https://github.com/atom/dom-listener.git"},"bugs":{"url":"https://github.com/atom/dom-listener/issues"},"readmeFilename":"README.md","_attachments":{},"_etag":"\"9SUVKJO0HTME22KTVCVJ6KN3C\""}
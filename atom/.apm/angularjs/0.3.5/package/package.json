{"name":"angularjs","version":"0.3.5","main":"./lib/angularjs","description":"An AngularJS package for Atom","keywords":["angular","angularjs","javascript","frontend"],"repository":{"type":"git","url":"git+https://github.com/angular-ui/AngularJS-Atom.git"},"readmeFilename":"README.md","license":"MIT","engines":{"atom":">=0.174.0 <2.0.0"},"dependencies":{},"readme":"# AngularJS support in Atom\n\nAdds syntax highlighting and snippets to AngularJS in Atom.\n\nOriginally [converted](http://atom.io/docs/latest/converting-a-text-mate-bundle)\nfrom the [AngularJS TextMate bundle](https://github.com/angular-ui/AngularJs.tmbundle).\n\nContributions are greatly appreciated. Please fork this repository and open a\npull request to add snippets, make grammar tweaks, etc.\n\n## Supported features\n\n### Autocompletes\n\nYou can use autocompletes for directives in HTML and\nangular.js's variables and function in JavaScript.\nSee [settings](https://github.com/angular-ui/AngularJS-Atom/blob/master/settings/)\nfor more details.\n\n![](https://raw.github.com/angular-ui/AngularJS-Atom/master/screenshots/autocompletes.gif)\n\nIf you type some prefix and press <kbd>Tab</kbd> or <kbd>Enter</kbd>,\nyou can use autocompletes in below.\n\n#### HTML\n```\nng-valid\nng-invalid\nng-pristine\nng-dirty\nng-show\nng-required\nng-minlength\nng-maxlength\nng-pattern\nng-true-value\nng-false-value\nng-value\nng-trim\nng-app\nng-bind\nng-bind-html\nng-bind-template\nng-blur\nng-change\nng-checked\nng-class\nng-class-even\nng-class-odd\nng-click\nng-cloak\nng-controller\nng-copy\nng-csp\nng-cut\nng-dblclick\nng-disabled\nng-focus\nng-form\nng-hide\nng-href\nng-if\nng-include\nng-init\nng-keydown\nng-keypress\nng-keyup\nng-list\nng-model\nng-model-options\nng-mousedown\nng-mouseenter\nng-mouseleave\nng-mousemove\nng-mouseover\nng-mouseup\nng-non-bindable\nng-open\nng-paste\nng-pluralize\nng-readonly\nng-repeat\nng-repeat-start\nng-repeat-end\nng-selected\nng-src\nng-srcset\nng-style\nng-submit\nng-switch\nng-options\nng-switch-when\nng-switch-default\nng-transclude\nng-view\nng-messages\nng-message\nng-swipe-left\nng-swipe-right\n```\n\n#### JavaScript\n\n```\nangular\nbind\nbootstrap\ncopy\nelement\nequals\nextend\nforEach\nfromJson\nidentity\ninjector\nisArray\nisDate\nisDefined\nisElement\nisFunction\nisNumber\nisObject\nisString\nisUndefined\nlowercase\nmodule\nnoop\nreloadWithDebugInfo\ntoJson\nuppercase\n$anchorScroll\n$animate\n$cacheFactory\n$compile\n$controller\n$document\n$exceptionHandler\n$filter\n$http\n$httpBackend\n$interpolate\n$interval\n$locale\n$location\n$log\n$parse\n$q\n$rootElement\n$rootScope\n$sce\n$sceDelegate\n$templateCache\n$templateRequest\n$timeout\n$window\n$animateProvider\n$compileProvider\n$controllerProvider\n$filterProvider\n$httpProvider\n$interpolateProvider\n$locationProvider\n$logProvider\n$parseProvider\n$rootScopeProvider\n$sceDelegateProvider\n$sceProvider\n$injector\n$provide\n$ariaProvider\n$aria\n$cookieStore\n$cookies\nmock\n$exceptionHandlerProvider\nTzDate\ndump\ninject\n$resource\n$routeProvider\n$route\n$routeParams\n$sanitize\n$swipe\ncontroller\n$scope\nservice\nfactory\nprovider\nngResource\ndefer\nconfig\nwhen\notherwise\ndirective\nrun\nfilter\n```\n\n### Snippets\n\nYou can use snippets in HTML and JavaScript.\nSee [snippets](https://github.com/angular-ui/AngularJS-Atom/tree/master/snippets)\nfor more details.\n\n![](https://raw.github.com/angular-ui/AngularJS-Atom/master/screenshots/snippets.gif)\n\nIf you type prefix and press `tab`,\nIt will be replaced by snippet for it.\n\n#### HTML\n\n##### ngindex\n```\n<html>\n<head>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/$1/angular.js\"></script>\n</head>\n<body ng-app>\n $2\n</body>\n</html>\n```\n\n##### ngsa\n```\n<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/angularjs/$1/angular.js\"></script>\n```\n\n##### ngst\n```\n<script type=\"text/ng-template\" id=\"$1\">\n  $2\n</script>\n```\n\n##### nginc\n```\n<ng-include src=\"$1\" ${2: onload=\"$3\"} ${4: autoscroll=\"$5\"}></ng-include>\n```\n\n##### ngplural\n```\n<ng-pluralize count=\"$1\" when=\"$2\" ${3: offset=\"$4\"}></ng-pluralize>\n```\n\n##### ngswitch\n```\n<ng-switch on=\"$1\">$2</ng-switch>\n```\n\n##### ngtmpl\n```\n<script type=\"text/ng-template\">$1</script>\n```\n\n##### ngview\n```\n<ng-view ${1: onload=\"$2\"} ${3: $autoscroll=\"$4\"}></ng-view>\n```\n\n#### JavaScript\n\n##### ngm\n```\nangular.module('$1', [$2])$3\n```\n\n##### ngma\n```\nvar $1 = angular.module('$2', [$3])$4\n```\n\n##### ngmc\n```\nvar $1 = angular.module('$2', [$3], function($4) {\n    $5\n})$6\n```\n\n##### ngmfa\n```\nfactory('$1', function($2) {\n  $3\n})$4\n```\n\n##### ngmfi\n```\nfilter('$1', function($2) {\n  return function (input, $3) {\n    $4\n  };\n})$5\n```\n\n##### ngms\n```\nservice('$1', function($2) {\n  $3\n})$4\n```\n\n##### ngro\n```\n$routeProvider.otherwise({redirectTo: '$1' });\n```\n\n##### ngrw\n```\n$routeProvider.when('$1', {templateUrl: '$2', controller: '$3'});\n```\n\n##### ngrwr\n```\n$routeProvider.when('$1', {templateUrl: '$2', controller: '$3', resolve: {$4} });\n```\n\n##### ngfor\n```\nangular.forEach($1, function(value, key) {\n  $2\n});\n```\n\n##### ngdl\n```\n.directive('$1', function($2) {\n  $3\n  return function(scope, element, attrs) {\n    $4\n  }\n})$5\n```\n\n##### ngdlf\n```\nfunction (scope, element, attrs) {\n  $1\n}\n```\n\n##### ngdc\n```\n.directive('$1', function factory($2) {\n  var directiveDefinitionObject = {\n    $3\n    compile: function compile(tElement, tAttrs, transclude) {\n      $4\n      return function (scope, element, attrs) {\n        $5\n      }\n    }\n  };\n  return directiveDefinitionObject;\n})$6\n```\n\n##### ngdcf\n```\nfunction compile(tElement, tAttrs, transclude) {\n  $1\n  return function (scope, element, attrs) {\n    $2\n  }\n}$3\n```\n\n##### ngb\n```\n$scope.$broadcast('$1', $2);\n```\n\n##### nge\n```\n$scope.$emit('', );\n```\n\n##### ngf\n```\n$scope.$1 = function($2) {\n  $3\n};\n```\n\n##### ngcp\n```\n$1Ctrl.prototype.$2 = function $2($3) {\n  $4\n};\n```\n\n##### ngon\n```\n$scope.$on('$1', function(event, $2) {\n  $3\n});\n```\n\n##### ngv\n```\n$scope.$1 = $2;\n```\n\n##### ngw\n```\n$scope.$watch('$1', function(newValue, oldValue) {\n  $2\n});\n```\n\n##### ngc\n```\nvar $1 = function($scope, $2) {\n  $3\n}\n```\n\n##### ngc$\n```\n$1Ctrl.$inject = [$scope, '$2'];\nfunction $1Ctrl($scope, $2) {\n  $4\n}\nangular.module($3).controller('$1Ctrl', $1Ctrl);\n```\n\n##### ngdoc\n```\n/**\n * @ngdoc ${1:function}\n * @name $2\n * @description\n * $3\n * \n */\n```\n\n##### nghttp\n```\n$http({method: '${1:GET}', url: '$2'})\n.success(function(data, status, headers, config) {\n  $3\n})\n.error(function(data, status, headers, config) {\n  $4\n});\n```\n\n##### ngcopy\n```\nangular.copy(${1:source} ${2:, ${3:destination}})\n```\n\n##### ngel\n```\nangular.element(${1:element});\n```\n\n##### ngeq\n```\nangular.equals(${1:object1}, ${2:object2});\n```\n\n##### ngext\n```\nangular.extend(${1:destinationObject}, ${2:sourceObject})\n```\n\n##### ngisa\n```\nangular.isArray(${1:value})\n```\n\n##### ngisd\n```\nangular.isDefined(${1:value})\n```\n\n##### ngisf\n```\nangular.isFunction(${1:value})\n```\n\n##### ngisn\n```\nangular.isNumber(${1:value})\n```\n\n##### ngiso\n```\nangular.isObject(${1:value})\n```\n\n##### ngiss\n```\nangular.isString(${1:value})\n```\n\n\n##### nglo\n```\nangular.lowercase(${1:string});\n```\n\n##### ngup\n```\nangular.uppercase(${1:string});\n```\n\n## FAQ\n\n#### Can't I use autocompletion with tab when I installed emmet plugin\n\nSee [emmet's document](https://github.com/emmetio/emmet-atom#tab-key)\n\nIn your `keymap.cson`, add the following code.\n\n```\n'atom-text-editor[data-grammar=\"text html angular\"]:not([mini])':\n  'tab': 'emmet:expand-abbreviation-with-tab'\n```\n","bugs":{"url":"https://github.com/angular-ui/AngularJS-Atom/issues"},"homepage":"https://github.com/angular-ui/AngularJS-Atom#readme","_id":"angularjs@0.3.5","_shasum":"aff04fbb29da877c249e81f375b1e67786a240dc","_resolved":"file:../d-116730-1375-1hxqlhy/package.tgz","_from":"../d-116730-1375-1hxqlhy/package.tgz"}